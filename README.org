* [[https://en.wikipedia.org/wiki/Tf%E2%80%93idf][tf-idf implementation]]

The algorithm tf-idf, or term frequency - inverse document frequency is a common way to measure the relevance of a word in a set of files. 
Often used by search engines, machine models and other tools to query and sort data.

The idea is simple, ...


* Lemmatization

What is Lemmatization? This is the process of...

The current implementation uses [[https://snowballstem.org/][snowball]] a popular algorithm that produces code for Lemmatization for many languages.
They support Rust, C, C++, C#, Java, Javascrript and more. Prebuild algorithm are available. It's also possible to tweak the algorithm by installing the compiler.

A rust implementation can be found here: [[https://github.com/minhnhdo/rust-stem]]

* Data 

The current implementation uses sqlite3 to index and query data. After running some tests, I do not think this was the correct tool. The program needs to create many large tables and query many tables. This is quite difficult to do well in sqlite3, data will often not be stored if the insert query is too large, or entries will be skipped. A better approach would be to use postgres or a no sql database. 

* TODO 

- [ ] Update readme
- [ ] Add blog entry 
- [ ] Create the build script
